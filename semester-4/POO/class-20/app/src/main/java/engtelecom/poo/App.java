/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import java.nio.channels.SeekableByteChannel;
import java.util.InputMismatchException;
import java.util.Scanner;

import com.google.common.util.concurrent.ExecutionError;

public class App {

    private int[] notas;

    public App() {
        this.notas = new int[10];
    }

    public void dividir() {

        int a = 3;

        int b = 2;

        Scanner teclado = new Scanner(System.in);

        double resultado = 0;

        try {

            System.out.println("Entre com o número: ");

            a = teclado.nextInt();

            System.out.println("Entre com o número: ");

            b = teclado.nextInt();

            resultado = (double) a / b;

        } catch (InputMismatchException e) {

            System.err.println("Entre com um número");
        } catch (ArithmeticException h) {

            System.err.println("Não é possivel dividir por 0");

        } catch (Exception e) {

            System.out.println("Erro geral");

        }

        System.out.println("Resultado é: " + resultado);

    }

    public void preencherNotas() {

        Scanner teclado = new Scanner(System.in);

        int nota = 0;
        int aluno = 0;

        boolean funcionou = false;

        do {
            try {

                System.out.println("Entre o número do aluno: ");

                aluno = teclado.nextInt();

                System.out.println("Entre a nota do aluno n° " + aluno + " :");

                nota = teclado.nextInt();

                notas[aluno] = nota;

                funcionou = true;

            } catch (InputMismatchException e) {
                System.err.println("Input incorreto, tente novamente!");
            } catch (ArrayIndexOutOfBoundsException h) {
                System.err.println("Posição do aluno incorreta, tente novamente!");
            } catch (Exception i) {
                System.err.println("Erro não especificado, por favor informe ao resposável!");
            }
            teclado.nextLine();

        } while (funcionou != true);

    }

    public void dormir() throws InterruptedException {

        // int i = -1;

        // if (i < 0) {

        // new ArithmeticException();
        // }

        Thread.sleep(-1000);

    }

    public static void main(String[] args) {

        App app = new App();

        try {
            app.dormir();
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            System.out.println(e);
        }
    }
}
